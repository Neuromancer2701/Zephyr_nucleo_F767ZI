# 1. Base Image and Dependencies
FROM ros:jazzy

# Set shell for complex RUN commands
SHELL ["/bin/bash", "-c"]

# Install essential tools and ROS 2 tools
RUN apt-get update && apt-get install -y \
    git \
    cmake \
    ninja-build \
    gperf \
    ccache \
    dfu-util \
    device-tree-compiler \
    wget \
    python3-dev \
    python3-pip \
    python3-setuptools \
    python3-tk \
    python3-wheel \
    xz-utils \
    file \
    make \
    gcc \
    gcc-multilib \
    g++-multilib \
    libsdl2-dev \
    libmagic1 \
    python3-colcon-common-extensions \
    python3-rosdep \
    && rm -rf /var/lib/apt/lists/*

# Initialize rosdep
RUN rosdep init && rosdep update --rosdistro jazzy

# 2. Zephyr Workspace Setup
RUN mkdir -p /zephyrproject && chown -R 1000:1000 /zephyrproject
WORKDIR /zephyrproject

# Create Python virtual environment and install west
RUN python3 -m venv .venv && \
    .venv/bin/pip install west boto3

# Initialize Zephyr and update modules
RUN .venv/bin/west init -m https://github.com/zephyrproject-rtos/zephyr --mr main . && \
    .venv/bin/west update

# Export Zephyr CMake package and install Python requirements
RUN .venv/bin/west zephyr-export && \
    .venv/bin/west packages pip --install

# 3. Zephyr SDK Installation
RUN .venv/bin/west sdk install --sdk-root /zephyrproject/zephyr-sdk --minimal

# 4. Micro-ROS Module
RUN git clone https://github.com/micro-ROS/micro_ros_zephyr_module.git /zephyrproject/modules/optional/micro_ros

# 5. Environment Variables
ENV ZEPHYR_BASE=/zephyrproject/zephyr
ENV ZEPHYR_TOOLCHAIN_VARIANT=zephyr
ENV ZEPHYR_SDK_INSTALL_DIR=/zephyrproject/zephyr-sdk
ENV PATH="/zephyrproject/.venv/bin:${PATH}"

# Source Zephyr environment scripts
RUN echo "source /zephyrproject/zephyr/zephyr-env.sh" >> /root/.bashrc && \
    echo "source /zephyrproject/zephyr_export.sh" >> /root/.bashrc

# 6. Final Setup
RUN mkdir /app && chown -R 1000:1000 /app
WORKDIR /app

# Set a default command
CMD ["bash"]
